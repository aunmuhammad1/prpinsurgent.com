# Generated by Django 4.2.6 on 2024-01-21 18:50

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='add_bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'add_banks',
                'db_table': 'add_bank',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='bank_detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_title', models.CharField(max_length=150)),
                ('account_number', models.PositiveBigIntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'bank_details',
                'db_table': 'bank_detail',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(default=0)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Deposit Failed', 'Deposit Failed'), ('Deposit Success', 'Deposit Success')], default='Pending', max_length=100)),
                ('deposit_request_at', models.DateTimeField(auto_now_add=True)),
                ('approved_or_rejected_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'deposits',
                'db_table': 'deposit',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='deposit_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='deposit_images/')),
            ],
            options={
                'verbose_name_plural': 'deposit_images',
                'db_table': 'deposit_image',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('user_level', models.CharField(blank=True, choices=[('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3')], max_length=100, null=True)),
                ('income_resource', models.CharField(choices=[('My Investment Income', 'My Investment Income'), ('Reference Income', 'Reference Income'), ('Reference CashBack', 'Reference CashBack'), ('Reference Join Income', 'Reference Join Income'), ('Daily Reward', 'Daily Reward'), ('Task Completed', 'Task Completed'), ('Extra Bonus', 'Extra Bonus')], max_length=100)),
                ('income_at', models.DateTimeField(auto_now_add=True)),
                ('task_detail', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'incomes',
                'db_table': 'income',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LastIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='plan income', max_length=50)),
                ('last_paln_income', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=180, unique=True)),
                ('plan_level', models.CharField(default='1', max_length=50)),
                ('plan_category', models.CharField(choices=[('Simple Plan', 'Simple Plan'), ('VIP Plan', 'VIP Plan')], default='Simple Plan', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='plan_images/')),
                ('price', models.PositiveBigIntegerField()),
                ('plan_duration', models.PositiveIntegerField()),
                ('total_income', models.FloatField()),
                ('daily_income', models.FloatField()),
                ('hourly_income', models.FloatField()),
                ('quantity_limit', models.IntegerField(default=1)),
                ('is_launch', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'plans',
                'db_table': 'plan',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('In Process', 'In Process'), ('Completed', 'Completed')], default='In Process', max_length=100)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'user_plans',
                'db_table': 'user_plan',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='votes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('vote_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'votes',
                'db_table': 'vote',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=165)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'wallets',
                'db_table': 'wallet',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='withdraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('withdraw_amount', models.FloatField(default=0)),
                ('amount_received', models.FloatField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Withdraw Failed', 'Withdraw Failed'), ('Withdraw Success', 'Withdraw Success')], default='Pending', max_length=100)),
                ('withdraw_request_at', models.DateTimeField(auto_now_add=True)),
                ('approved_or_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'withdraws',
                'db_table': 'withdraw',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
    ]
